class MinStack:

    def __init__(self):
        from collections import deque
        self.stk=deque()

    def push(self, val: int) -> None:
        if self.stk:
            _,prevmin=self.stk[-1]
            self.stk.append((val,min(val,prevmin)))
        else:
            self.stk.append((val,val))

    def pop(self) -> None:
        val,_=self.stk.pop()
        return val

    def top(self) -> int:
        val,_=self.stk[-1]
        return val

    def getMin(self) -> int:
        _,prevmin=self.stk[-1]
        return prevmin